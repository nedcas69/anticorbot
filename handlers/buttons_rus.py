from aiogram.dispatcher import FSMContext
from aiogram.types import Message
from keyboards import kb_ru, kor, buh, nerav, ot, sbot
from loader import dp
import smtplib
from email.mime.text import MIMEText
from state import select_lang
from keyboards import lang_btn  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–∞—à—É –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É


@dp.message_handler(text='–†—É—Å—Å–∫–∏–π üá∑üá∫')
async def uz(mess: Message):
    hello_text = "–í–∞—à–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ –æ—á–µ–Ω—å –≤–∞–∂–Ω–æ –¥–ª—è –Ω–∞—Å. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –Ω–∞—Ä—É—à–µ–Ω–∏—è, –≤ —Å–≤—è–∑–∏ —Å –∫–æ—Ç–æ—Ä—ã–º –≤—ã —Å–æ–±–∏—Ä–∞–µ—Ç–µ—Å—å –≤—ã—Ä–∞–∑–∏—Ç—å —Å–≤–æ—é –æ–±–µ—Å–ø–æ–∫–æ–µ–Ω–Ω–æ—Å—Ç—å:"
    await mess.answer(hello_text, reply_markup=kb_ru)


@dp.message_handler(text='–ù–∞—Å—Ç—Ä–æ–π–∫–∏ ‚öôÔ∏è')  # –°–æ–∑–¥–∞—ë–º message handler –∫–æ—Ç–æ—Ä—ã–π –ª–æ–≤–∏—Ç –∫–æ–º–∞–Ω–¥—É /menu
async def menu(message: Message, state: FSMContext):  # –°–æ–∑–¥–∞—ë–º –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫!", reply_markup=lang_btn)
    await state.finish()


@dp.message_handler(text='–í–∑—è—Ç–æ—á–Ω–∏—á–µ—Å—Ç–≤–æ –∏ –∫–æ—Ä—Ä—É–ø—Ü–∏—è.')  # –°–æ–∑–¥–∞—ë–º message handler –∫–æ—Ç–æ—Ä—ã–π –ª–æ–≤–∏—Ç –∫–æ–º–∞–Ω–¥—É /menu
async def poraxor(message: Message):  # –°–æ–∑–¥–∞—ë–º –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é
    mes_text = "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É—Ç–æ—á–Ω–∏—Ç–µ, –≤ —á—ë–º –∏–º–µ–Ω–Ω–æ —Å–æ—Å—Ç–æ–∏—Ç –Ω–∞—Ä—É—à–µ–Ω–∏–µ:"
    await message.answer(mes_text, reply_markup=kor)
    await select_lang.poraxor.set()


@dp.message_handler(state=select_lang.poraxor)
async def send_mail(mess: Message, state: FSMContext):
    sub = mess.text
    await mess.answer('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Å—Ç–∞–≤—å—Ç–µ –í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.\n\n‚ÑπÔ∏è –ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –æ—Ç–≤–µ—Ç –Ω–∞ –≤–∞—à—É –∑–∞—è–≤–∫—É, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –§.–ò.–û –∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤—å—Ç–µ –∫–æ–Ω—Ç–∞–∫—Ç–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é (–≤–∞—à –∞–¥—Ä–µ—Å —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–π –ø–æ—á—Ç—ã –∏–ª–∏ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞', reply_markup=kb_ru)
    await state.finish()
    await select_lang.poraxor1.set()

    @dp.message_handler(state=select_lang.poraxor1)
    async def send_mail(mess: Message, state: FSMContext):
        await state.finish()
        send_text = mess.text
        sender = "compliance1@uzbeksteel.uz"
        password = '$COMPL11'
        server = smtplib.SMTP("10.3.1.33", 587)
        server.starttls()
        server.login(sender, password)
        msg = MIMEText(send_text)
        msg['Subject'] = sub
        server.sendmail(sender, 'compliance2@uzbeksteel.uz', msg.as_string())
        server.sendmail(sender, 'a.abdullayev@uzbeksteel.uz', msg.as_string())
        ans_text = "–í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ."
        await mess.answer(ans_text, reply_markup=kb_ru)


@dp.message_handler(text='–ù–∞—Ä—É—à–µ–Ω–∏—è –±—É—Ö–≥–∞–ª—Ç–µ—Ä—Å–∫–æ–≥–æ —É—á–µ—Ç–∞.')  # –°–æ–∑–¥–∞—ë–º message handler –∫–æ—Ç–æ—Ä—ã–π –ª–æ–≤–∏—Ç –∫–æ–º–∞–Ω–¥—É /menu
async def buxgalter(message: Message):  # –°–æ–∑–¥–∞—ë–º –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é
    mes_text = "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É—Ç–æ—á–Ω–∏—Ç–µ, –≤ —á—ë–º –∏–º–µ–Ω–Ω–æ —Å–æ—Å—Ç–æ–∏—Ç –Ω–∞—Ä—É—à–µ–Ω–∏–µ:"
    await message.answer(mes_text, reply_markup=buh)
    await select_lang.buxgalter.set()


@dp.message_handler(state=select_lang.buxgalter)
async def send_mail(mess: Message, state: FSMContext):
    sub = mess.text
    await mess.answer('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Å—Ç–∞–≤—å—Ç–µ –í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.\n\n‚ÑπÔ∏è –ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –æ—Ç–≤–µ—Ç –Ω–∞ –≤–∞—à—É –∑–∞—è–≤–∫—É, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –§.–ò.–û –∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤—å—Ç–µ –∫–æ–Ω—Ç–∞–∫—Ç–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é (–≤–∞—à –∞–¥—Ä–µ—Å —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–π –ø–æ—á—Ç—ã –∏–ª–∏ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞', reply_markup=kb_ru)
    await state.finish()
    await select_lang.buxgalter1.set()

    @dp.message_handler(state=select_lang.buxgalter1)
    async def send_mail(mess: Message, state: FSMContext):
        await state.finish()
        send_text = mess.text
        sender = "compliance1@uzbeksteel.uz"
        password = '$COMPL11'
        server = smtplib.SMTP("10.3.1.33", 587)
        server.starttls()
        server.login(sender, password)
        msg = MIMEText(send_text)
        msg['Subject'] = sub
        server.sendmail(sender, 'compliance3@uzbeksteel.uz', msg.as_string())
        server.sendmail(sender, 'a.abdullayev@uzbeksteel.uz', msg.as_string())
        ans_text = "–í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ."
        await mess.answer(ans_text, reply_markup=kb_ru)


@dp.message_handler(text='–ù–µ—Ä–∞–≤–Ω—ã–µ —É—Å–ª–æ–≤–∏—è –Ω–∞–π–º–∞ –∏ —Ç—Ä—É–¥–∞.')  # –°–æ–∑–¥–∞—ë–º message handler –∫–æ—Ç–æ—Ä—ã–π –ª–æ–≤–∏—Ç –∫–æ–º–∞–Ω–¥—É /menu
async def tengsizlik(message: Message):  # –°–æ–∑–¥–∞—ë–º –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é
    mes_text = "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É—Ç–æ—á–Ω–∏—Ç–µ, –≤ —á—ë–º –∏–º–µ–Ω–Ω–æ —Å–æ—Å—Ç–æ–∏—Ç –Ω–∞—Ä—É—à–µ–Ω–∏–µ:"
    await message.answer(mes_text, reply_markup=nerav)
    await select_lang.nerav.set()


@dp.message_handler(state=select_lang.nerav)
async def send_mail(mess: Message, state: FSMContext):
    sub = mess.text
    await mess.answer('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Å—Ç–∞–≤—å—Ç–µ –í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.\n\n‚ÑπÔ∏è –ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –æ—Ç–≤–µ—Ç –Ω–∞ –≤–∞—à—É –∑–∞—è–≤–∫—É, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –§.–ò.–û –∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤—å—Ç–µ –∫–æ–Ω—Ç–∞–∫—Ç–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é (–≤–∞—à –∞–¥—Ä–µ—Å —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–π –ø–æ—á—Ç—ã –∏–ª–∏ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞', reply_markup=kb_ru)
    await state.finish()
    await select_lang.nerav1.set()

    @dp.message_handler(state=select_lang.nerav1)
    async def send_mail(mess: Message, state: FSMContext):
        await state.finish()
        send_text = mess.text
        sender = "compliance1@uzbeksteel.uz"
        password = '$COMPL11'
        server = smtplib.SMTP("10.3.1.33", 587)
        server.starttls()
        server.login(sender, password)
        msg = MIMEText(send_text)
        msg['Subject'] = sub
        server.sendmail(sender, 'compliance4@uzbeksteel.uz', msg.as_string())
        server.sendmail(sender, 'a.abdullayev@uzbeksteel.uz', msg.as_string())
        ans_text = "–í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ."
        await mess.answer(ans_text, reply_markup=kb_ru)


@dp.message_handler(
    text='–£–≥—Ä–æ–∑–∞ –∑–¥–æ—Ä–æ–≤—å—é, –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –∏ –æ–∫—Ä—É–∂–∞—é—â–µ–π —Å—Ä–µ–¥–µ.')  # –°–æ–∑–¥–∞—ë–º message handler –∫–æ—Ç–æ—Ä—ã–π –ª–æ–≤–∏—Ç –∫–æ–º–∞–Ω–¥—É /menu
async def tbs(message: Message):  # –°–æ–∑–¥–∞—ë–º –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é
    mes_text = "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É—Ç–æ—á–Ω–∏—Ç–µ, –≤ —á—ë–º –∏–º–µ–Ω–Ω–æ —Å–æ—Å—Ç–æ–∏—Ç –Ω–∞—Ä—É—à–µ–Ω–∏–µ:"
    await message.answer(mes_text, reply_markup=ot)
    await select_lang.tbs.set()


@dp.message_handler(state=select_lang.tbs)
async def send_mail(mess: Message, state: FSMContext):
    sub = mess.text
    await mess.answer('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Å—Ç–∞–≤—å—Ç–µ –í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.\n\n‚ÑπÔ∏è –ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –æ—Ç–≤–µ—Ç –Ω–∞ –≤–∞—à—É –∑–∞—è–≤–∫—É, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –§.–ò.–û –∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤—å—Ç–µ –∫–æ–Ω—Ç–∞–∫—Ç–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é (–≤–∞—à –∞–¥—Ä–µ—Å —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–π –ø–æ—á—Ç—ã –∏–ª–∏ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞', reply_markup=kb_ru)
    await state.finish()
    await select_lang.tbs1.set()

    @dp.message_handler(state=select_lang.tbs1)
    async def send_mail(mess: Message, state: FSMContext):
        await state.finish()
        send_text = mess.text
        sender = "compliance1@uzbeksteel.uz"
        password = '$COMPL11'
        server = smtplib.SMTP("10.3.1.33", 587)
        server.starttls()
        server.login(sender, password)
        msg = MIMEText(send_text)
        msg['Subject'] = sub
        server.sendmail(sender, 'compliance5@uzbeksteel.uz', msg.as_string())
        server.sendmail(sender, 'a.abdullayev@uzbeksteel.uz', msg.as_string())
        ans_text = "–í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ."
        await mess.answer(ans_text, reply_markup=kb_ru)


@dp.message_handler(text='–£—Ç–µ—á–∫–∞/ —É–Ω–∏—á—Ç–æ–∂–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏.')  # –°–æ–∑–¥–∞—ë–º message handler –∫–æ—Ç–æ—Ä—ã–π –ª–æ–≤–∏—Ç –∫–æ–º–∞–Ω–¥—É /menu
async def sbt(message: Message):  # –°–æ–∑–¥–∞—ë–º –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é
    mes_text = "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É—Ç–æ—á–Ω–∏—Ç–µ, –≤ —á—ë–º –∏–º–µ–Ω–Ω–æ —Å–æ—Å—Ç–æ–∏—Ç –Ω–∞—Ä—É—à–µ–Ω–∏–µ:"
    await message.answer(mes_text, reply_markup=sbot)
    await select_lang.sbt.set()


@dp.message_handler(state=select_lang.sbt)
async def send_mail(mess: Message, state: FSMContext):
    sub = mess.text
    await mess.answer('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Å—Ç–∞–≤—å—Ç–µ –í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.\n\n‚ÑπÔ∏è –ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –æ—Ç–≤–µ—Ç –Ω–∞ –≤–∞—à—É –∑–∞—è–≤–∫—É, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –§.–ò.–û –∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤—å—Ç–µ –∫–æ–Ω—Ç–∞–∫—Ç–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é (–≤–∞—à –∞–¥—Ä–µ—Å —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–π –ø–æ—á—Ç—ã –∏–ª–∏ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞', reply_markup=kb_ru)
    await state.finish()
    await select_lang.sbt1.set()

    @dp.message_handler(state=select_lang.sbt1)
    async def send_mail(mess: Message, state: FSMContext):
        await state.finish()
        send_text = mess.text
        sender = "compliance1@uzbeksteel.uz"
        password = '$COMPL11'
        server = smtplib.SMTP("10.3.1.33", 587)
        server.starttls()
        server.login(sender, password)
        msg = MIMEText(send_text)
        msg['Subject'] = sub
        server.sendmail(sender, 'compliance6@uzbeksteel.uz', msg.as_string())
        server.sendmail(sender, 'a.abdullayev@uzbeksteel.uz', msg.as_string())
        ans_text = "–í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ."
        await mess.answer(ans_text, reply_markup=kb_ru)


@dp.message_handler(text='–î—Ä—É–≥–æ–µ.')  # –°–æ–∑–¥–∞—ë–º message handler –∫–æ—Ç–æ—Ä—ã–π –ª–æ–≤–∏—Ç –∫–æ–º–∞–Ω–¥—É /menu
async def lang(message: Message):  # –°–æ–∑–¥–∞—ë–º –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é
    sub = message.text
    mes_text = '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Å—Ç–∞–≤—å—Ç–µ –í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.\n\n‚ÑπÔ∏è –ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –æ—Ç–≤–µ—Ç –Ω–∞ –≤–∞—à—É –∑–∞—è–≤–∫—É, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –§.–ò.–û –∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤—å—Ç–µ –∫–æ–Ω—Ç–∞–∫—Ç–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é (–≤–∞—à –∞–¥—Ä–µ—Å —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–π –ø–æ—á—Ç—ã –∏–ª–∏ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞'
    await message.answer(mes_text, reply_markup=kb_ru)
    await select_lang.drugoe.set()

    @dp.message_handler(state=select_lang.drugoe)
    async def send_mail(mess: Message, state: FSMContext):
        send_text = mess.text
        await state.finish()
        sender = "compliance1@uzbeksteel.uz"
        password = '$COMPL11'
        server = smtplib.SMTP("10.3.1.33", 587)
        server.starttls()

        server.login(sender, password)
        msg = MIMEText(send_text)
        msg['Subject'] = sub
        server.sendmail(sender, 'compliance7@uzbeksteel.uz', msg.as_string())
        server.sendmail(sender, 'a.abdullayev@uzbeksteel.uz', msg.as_string())

        ans_text = "–í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ."
        await mess.answer(ans_text, reply_markup=kb_ru)
